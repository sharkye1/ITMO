def to_symmetric_base(num, base):
    # проверяем, что входные данные - целые числа
    if not isinstance(num, int): 
        raise ValueError("Число должно быть целым.") # проверяем, что число - целое
    if not isinstance(base, int): 
        raise ValueError("Основание должно быть целым.") # проверяем, что основание - целое число
    
    if base < 3: 
        raise ValueError("Основание должно быть не меньше 3.") # проверяем, что основание >= 3
    if base % 2 == 0: 
        raise ValueError("Основание должно быть нечётным для симметричной системы.") # проверяем, что основание нечётное
    
    if num == 0: return "0" 
    
    digits = [] # инициализируем список цифр
    while num != 0: 
        remainder = num % base # вычисляем остаток от деления на основание
        num = num // base # выполняем целочисленное деление для следующей итерации
        
        half_base = base // 2 # определяем половину основания
        if remainder > half_base: 
            remainder -= base # уменьшаем остаток на основание
            num += 1 # компенсируем перенос в следующий разряд
        
        digits.append(remainder) # добавляем цифру в список
    
    digits.reverse() # реверсируем список цифр
    
    result = "" 
    for d in digits: 
        if d < 0: result += "{^" + str(-d) + "}" # форматируем отрицательную цифру
        else: result += str(d) # добавляем неотрицательную цифру

    return result

if __name__ == "__main__":
    try: 
        input_num = input("Введите число в десятичной системе: ") # запрашиваем ввод числа в десятичной системе
        num = int(input_num) # преобразуем строку в целое число
        input_base = input("Введите основание n для симметричной системы (например, 9): ") # запрашиваем основание системы счисления
        base = int(input_base) # преобразуем строку основания в целое число
        result = to_symmetric_base(num, base) # вызываем функцию конвертации
        print("Число в симметричной системе с основанием", base, ":", result) # выводим результат
    except ValueError as ve: 
        print("Ошибка: неверный ввод. Убедитесь, что ввели целые числа и основание >= 3.", ve) # обрабатываем ошибки ввода
    except ZeroDivisionError:
        print("Ошибка: основание не может быть 0.") # обрабатываем деление на ноль
    except Exception as e: 
        print("Неизвестная ошибка:", e) # обрабатываем непредвиденные ошибки